name: "Terraform Apply (addons: enable_addons=true)"

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  security-events: write

env:
  AWS_REGION: eu-west-2
  AWS_ACCOUNT_ID: 112136120738
  TF_WORKING_DIR: terraform
  TF_INPUT: false
  TF_IN_AUTOMATION: true

jobs:
  apply-addons:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github-terraform
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.TF_WORKING_DIR }}/.terraform
            ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-tf-${{ hashFiles(format('{0}/**/.terraform.lock.hcl', env.TF_WORKING_DIR)) }}
          restore-keys: |
            ${{ runner.os }}-tf-

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          TF_PLUGIN_CACHE_DIR: ~/.terraform.d/plugin-cache
        run: terraform init -upgrade

      # --- Checkov scan (Terraform) ---
      - name: Checkov (Terraform)
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ${{ env.TF_WORKING_DIR }}
          framework: terraform
          download_external_modules: true
          severity_threshold: HIGH
          soft_fail: false
          output_format: sarif
          output_file_path: checkov.sarif

      - name: Upload Checkov SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: checkov.sarif

      - name: Terraform Plan (enable_addons=true)
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -no-color -var 'enable_addons=true'

      - name: Terraform Apply (enable_addons=true)
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve -no-color -var 'enable_addons=true'